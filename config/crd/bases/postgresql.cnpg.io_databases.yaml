---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: databases.postgresql.cnpg.io
spec:
  group: postgresql.cnpg.io
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.cluster.name
      name: Cluster
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the PostgreSQL API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the desired behavior of the cluster. More
              info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              bootstrap:
                description: Instructions to bootstrap this database
                properties:
                  initdb:
                    description: Bootstrap the cluster via initdb
                    properties:
                      dataChecksums:
                        description: 'Whether the `-k` option should be passed to
                          initdb, enabling checksums on data pages (default: `false`)'
                        type: boolean
                      database:
                        description: 'Name of the database used by the application.
                          Default: `app`.'
                        type: string
                      encoding:
                        description: The value to be passed as option `--encoding`
                          for initdb (default:`UTF8`)
                        type: string
                      import:
                        description: Bootstraps the new cluster by importing data
                          from an existing PostgreSQL instance using logical backup
                          (`pg_dump` and `pg_restore`)
                        properties:
                          databases:
                            description: The databases to import
                            items:
                              type: string
                            type: array
                          postImportApplicationSQL:
                            description: List of SQL queries to be executed as a superuser
                              in the application database right after is imported
                              - to be used with extreme care (by default empty). Only
                              available in microservice type.
                            items:
                              type: string
                            type: array
                          roles:
                            description: The roles to import
                            items:
                              type: string
                            type: array
                          schemaOnly:
                            default: false
                            description: 'When set to true, only the `pre-data` and
                              `post-data` sections of `pg_restore` are invoked, avoiding
                              data import. Default: `false`.'
                            type: boolean
                          source:
                            description: The source of the import
                            properties:
                              externalCluster:
                                description: The name of the externalCluster used
                                  for import
                                type: string
                            required:
                            - externalCluster
                            type: object
                          type:
                            description: The import type. Can be `microservice` or
                              `monolith`.
                            enum:
                            - microservice
                            - monolith
                            type: string
                        required:
                        - databases
                        - source
                        - type
                        type: object
                      localeCType:
                        description: The value to be passed as option `--lc-ctype`
                          for initdb (default:`C`)
                        type: string
                      localeCollate:
                        description: The value to be passed as option `--lc-collate`
                          for initdb (default:`C`)
                        type: string
                      options:
                        description: 'The list of options that must be passed to initdb
                          when creating the cluster. Deprecated: This could lead to
                          inconsistent configurations, please use the explicit provided
                          parameters instead. If defined, explicit values will be
                          ignored.'
                        items:
                          type: string
                        type: array
                      owner:
                        description: Name of the owner of the database in the instance
                          to be used by applications. Defaults to the value of the
                          `database` key.
                        type: string
                      postInitApplicationSQL:
                        description: List of SQL queries to be executed as a superuser
                          in the application database right after is created - to
                          be used with extreme care (by default empty)
                        items:
                          type: string
                        type: array
                      postInitApplicationSQLRefs:
                        description: PostInitApplicationSQLRefs points references
                          to ConfigMaps or Secrets which contain SQL files, the general
                          implementation order to these references is from all Secrets
                          to all ConfigMaps, and inside Secrets or ConfigMaps, the
                          implementation order is same as the order of each array
                          (by default empty)
                        properties:
                          configMapRefs:
                            description: ConfigMapRefs holds a list of references
                              to ConfigMaps
                            items:
                              description: ConfigMapKeySelector contains enough information
                                to let you locate the key of a ConfigMap
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            type: array
                          secretRefs:
                            description: SecretRefs holds a list of references to
                              Secrets
                            items:
                              description: SecretKeySelector contains enough information
                                to let you locate the key of a Secret
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            type: array
                        type: object
                      postInitSQL:
                        description: List of SQL queries to be executed as a superuser
                          immediately after the cluster has been created - to be used
                          with extreme care (by default empty)
                        items:
                          type: string
                        type: array
                      postInitTemplateSQL:
                        description: List of SQL queries to be executed as a superuser
                          in the `template1` after the cluster has been created -
                          to be used with extreme care (by default empty)
                        items:
                          type: string
                        type: array
                      secret:
                        description: Name of the secret containing the initial credentials
                          for the owner of the user database. If empty a new secret
                          will be created from scratch
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      walSegmentSize:
                        description: 'The value in megabytes (1 to 1024) to be passed
                          to the `--wal-segsize` option for initdb (default: empty,
                          resulting in PostgreSQL default: 16MB)'
                        maximum: 1024
                        minimum: 1
                        type: integer
                    type: object
                  pg_basebackup:
                    description: Bootstrap the cluster taking a physical backup of
                      another compatible PostgreSQL instance
                    properties:
                      database:
                        description: 'Name of the database used by the application.
                          Default: `app`.'
                        type: string
                      owner:
                        description: Name of the owner of the database in the instance
                          to be used by applications. Defaults to the value of the
                          `database` key.
                        type: string
                      secret:
                        description: Name of the secret containing the initial credentials
                          for the owner of the user database. If empty a new secret
                          will be created from scratch
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      source:
                        description: The name of the server of which we need to take
                          a physical backup
                        minLength: 1
                        type: string
                    required:
                    - source
                    type: object
                  recovery:
                    description: Bootstrap the cluster from a backup
                    properties:
                      backup:
                        description: The backup object containing the physical base
                          backup from which to initiate the recovery procedure. Mutually
                          exclusive with `source` and `volumeSnapshots`.
                        properties:
                          endpointCA:
                            description: EndpointCA store the CA bundle of the barman
                              endpoint. Useful when using self-signed certificates
                              to avoid errors with certificate issuer and barman-cloud-wal-archive.
                            properties:
                              key:
                                description: The key to select
                                type: string
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      database:
                        description: 'Name of the database used by the application.
                          Default: `app`.'
                        type: string
                      owner:
                        description: Name of the owner of the database in the instance
                          to be used by applications. Defaults to the value of the
                          `database` key.
                        type: string
                      recoveryTarget:
                        description: 'By default, the recovery process applies all
                          the available WAL files in the archive (full recovery).
                          However, you can also end the recovery as soon as a consistent
                          state is reached or recover to a point-in-time (PITR) by
                          specifying a `RecoveryTarget` object, as expected by PostgreSQL
                          (i.e., timestamp, transaction Id, LSN, ...). More info:
                          https://www.postgresql.org/docs/current/runtime-config-wal.html#RUNTIME-CONFIG-WAL-RECOVERY-TARGET'
                        properties:
                          backupID:
                            description: The ID of the backup from which to start
                              the recovery process. If empty (default) the operator
                              will automatically detect the backup based on targetTime
                              or targetLSN if specified. Otherwise use the latest
                              available backup in chronological order.
                            type: string
                          exclusive:
                            description: Set the target to be exclusive. If omitted,
                              defaults to false, so that in Postgres, `recovery_target_inclusive`
                              will be true
                            type: boolean
                          targetImmediate:
                            description: End recovery as soon as a consistent state
                              is reached
                            type: boolean
                          targetLSN:
                            description: The target LSN (Log Sequence Number)
                            type: string
                          targetName:
                            description: The target name (to be previously created
                              with `pg_create_restore_point`)
                            type: string
                          targetTLI:
                            description: The target timeline ("latest" or a positive
                              integer)
                            type: string
                          targetTime:
                            description: The target time as a timestamp in the RFC3339
                              standard
                            type: string
                          targetXID:
                            description: The target transaction ID
                            type: string
                        type: object
                      secret:
                        description: Name of the secret containing the initial credentials
                          for the owner of the user database. If empty a new secret
                          will be created from scratch
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      source:
                        description: The external cluster whose backup we will restore.
                          This is also used as the name of the folder under which
                          the backup is stored, so it must be set to the name of the
                          source cluster Mutually exclusive with `backup`.
                        type: string
                      volumeSnapshots:
                        description: The static PVC data source(s) from which to initiate
                          the recovery procedure. Currently supporting `VolumeSnapshot`
                          and `PersistentVolumeClaim` resources that map an existing
                          PVC group, compatible with CloudNativePG, and taken with
                          a cold backup copy on a fenced Postgres instance (limitation
                          which will be removed in the future when online backup will
                          be implemented). Mutually exclusive with `backup`.
                        properties:
                          storage:
                            description: Configuration of the storage of the instances
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                            x-kubernetes-map-type: atomic
                          walStorage:
                            description: Configuration of the storage for PostgreSQL
                              WAL (Write-Ahead Log)
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - storage
                        type: object
                    type: object
                type: object
              cluster:
                description: The cluster to add this database on
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              description:
                description: Description of this PostgreSQL database
                type: string
              externalClusters:
                description: The list of external clusters which are used in the configuration
                items:
                  description: ExternalCluster represents the connection parameters
                    to an external cluster which is used in the other sections of
                    the configuration
                  properties:
                    barmanObjectStore:
                      description: The configuration for the barman-cloud tool suite
                      properties:
                        azureCredentials:
                          description: The credentials to use to upload data to Azure
                            Blob Storage
                          properties:
                            connectionString:
                              description: The connection string to be used
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            inheritFromAzureAD:
                              description: Use the Azure AD based authentication without
                                providing explicitly the keys.
                              type: boolean
                            storageAccount:
                              description: The storage account where to upload data
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            storageKey:
                              description: The storage account key to be used in conjunction
                                with the storage account name
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            storageSasToken:
                              description: A shared-access-signature to be used in
                                conjunction with the storage account name
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                          type: object
                        data:
                          description: The configuration to be used to backup the
                            data files When not defined, base backups files will be
                            stored uncompressed and may be unencrypted in the object
                            store, according to the bucket default policy.
                          properties:
                            compression:
                              description: Compress a backup file (a tar file per
                                tablespace) while streaming it to the object store.
                                Available options are empty string (no compression,
                                default), `gzip`, `bzip2` or `snappy`.
                              enum:
                              - gzip
                              - bzip2
                              - snappy
                              type: string
                            encryption:
                              description: Whenever to force the encryption of files
                                (if the bucket is not already configured for that).
                                Allowed options are empty string (use the bucket policy,
                                default), `AES256` and `aws:kms`
                              enum:
                              - AES256
                              - aws:kms
                              type: string
                            immediateCheckpoint:
                              description: Control whether the I/O workload for the
                                backup initial checkpoint will be limited, according
                                to the `checkpoint_completion_target` setting on the
                                PostgreSQL server. If set to true, an immediate checkpoint
                                will be used, meaning PostgreSQL will complete the
                                checkpoint as soon as possible. `false` by default.
                              type: boolean
                            jobs:
                              description: The number of parallel jobs to be used
                                to upload the backup, defaults to 2
                              format: int32
                              minimum: 1
                              type: integer
                          type: object
                        destinationPath:
                          description: The path where to store the backup (i.e. s3://bucket/path/to/folder)
                            this path, with different destination folders, will be
                            used for WALs and for data
                          minLength: 1
                          type: string
                        endpointCA:
                          description: EndpointCA store the CA bundle of the barman
                            endpoint. Useful when using self-signed certificates to
                            avoid errors with certificate issuer and barman-cloud-wal-archive
                          properties:
                            key:
                              description: The key to select
                              type: string
                            name:
                              description: Name of the referent.
                              type: string
                          required:
                          - key
                          - name
                          type: object
                        endpointURL:
                          description: Endpoint to be used to upload data to the cloud,
                            overriding the automatic endpoint discovery
                          type: string
                        googleCredentials:
                          description: The credentials to use to upload data to Google
                            Cloud Storage
                          properties:
                            applicationCredentials:
                              description: The secret containing the Google Cloud
                                Storage JSON file with the credentials
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            gkeEnvironment:
                              description: If set to true, will presume that it's
                                running inside a GKE environment, default to false.
                              type: boolean
                          type: object
                        historyTags:
                          additionalProperties:
                            type: string
                          description: HistoryTags is a list of key value pairs that
                            will be passed to the Barman --history-tags option.
                          type: object
                        s3Credentials:
                          description: The credentials to use to upload data to S3
                          properties:
                            accessKeyId:
                              description: The reference to the access key id
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            inheritFromIAMRole:
                              description: Use the role based authentication without
                                providing explicitly the keys.
                              type: boolean
                            region:
                              description: The reference to the secret containing
                                the region name
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            secretAccessKey:
                              description: The reference to the secret access key
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            sessionToken:
                              description: The references to the session key
                              properties:
                                key:
                                  description: The key to select
                                  type: string
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                          type: object
                        serverName:
                          description: The server name on S3, the cluster name is
                            used if this parameter is omitted
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a list of key value pairs that will
                            be passed to the Barman --tags option.
                          type: object
                        wal:
                          description: The configuration for the backup of the WAL
                            stream. When not defined, WAL files will be stored uncompressed
                            and may be unencrypted in the object store, according
                            to the bucket default policy.
                          properties:
                            compression:
                              description: Compress a WAL file before sending it to
                                the object store. Available options are empty string
                                (no compression, default), `gzip`, `bzip2` or `snappy`.
                              enum:
                              - gzip
                              - bzip2
                              - snappy
                              type: string
                            encryption:
                              description: Whenever to force the encryption of files
                                (if the bucket is not already configured for that).
                                Allowed options are empty string (use the bucket policy,
                                default), `AES256` and `aws:kms`
                              enum:
                              - AES256
                              - aws:kms
                              type: string
                            maxParallel:
                              description: Number of WAL files to be either archived
                                in parallel (when the PostgreSQL instance is archiving
                                to a backup object store) or restored in parallel
                                (when a PostgreSQL standby is fetching WAL files from
                                a recovery object store). If not specified, WAL files
                                will be processed one at a time. It accepts a positive
                                integer as a value - with 1 being the minimum accepted
                                value.
                              minimum: 1
                              type: integer
                          type: object
                      required:
                      - destinationPath
                      type: object
                    connectionParameters:
                      additionalProperties:
                        type: string
                      description: The list of connection parameters, such as dbname,
                        host, username, etc
                      type: object
                    name:
                      description: The server name, required
                      type: string
                    password:
                      description: The reference to the password to be used to connect
                        to the server
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    sslCert:
                      description: The reference to an SSL certificate to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    sslKey:
                      description: The reference to an SSL private key to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    sslRootCert:
                      description: The reference to an SSL CA public key to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - name
                  type: object
                type: array
              inheritedMetadata:
                description: Metadata that will be inherited by all objects related
                  to the Cluster
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              logLevel:
                default: info
                description: 'The instances'' log level, one of the following values:
                  error, warning, info (default), debug, trace'
                enum:
                - error
                - warning
                - info
                - debug
                - trace
                type: string
              managed:
                description: The configuration that is used by the portions of PostgreSQL
                  that are managed by the instance manager
                properties:
                  roles:
                    description: Database roles managed by the `Cluster`
                    items:
                      description: "RoleConfiguration is the representation, in Kubernetes,
                        of a PostgreSQL role with the additional field Ensure specifying
                        whether to ensure the presence or absence of the role in the
                        database \n The defaults of the CREATE ROLE command are applied
                        Reference: https://www.postgresql.org/docs/current/sql-createrole.html"
                      properties:
                        bypassrls:
                          description: Whether a role bypasses every row-level security
                            (RLS) policy. Default is `false`.
                          type: boolean
                        comment:
                          description: Description of the role
                          type: string
                        connectionLimit:
                          default: -1
                          description: If the role can log in, this specifies how
                            many concurrent connections the role can make. `-1` (the
                            default) means no limit.
                          format: int64
                          type: integer
                        createdb:
                          description: When set to `true`, the role being defined
                            will be allowed to create new databases. Specifying `false`
                            (default) will deny a role the ability to create databases.
                          type: boolean
                        createrole:
                          description: Whether the role will be permitted to create,
                            alter, drop, comment on, change the security label for,
                            and grant or revoke membership in other roles. Default
                            is `false`.
                          type: boolean
                        disablePassword:
                          description: DisablePassword indicates that a role's password
                            should be set to NULL in Postgres
                          type: boolean
                        ensure:
                          default: present
                          description: Ensure the role is `present` or `absent` -
                            defaults to "present"
                          enum:
                          - present
                          - absent
                          type: string
                        inRoles:
                          description: List of one or more existing roles to which
                            this role will be immediately added as a new member. Default
                            empty.
                          items:
                            type: string
                          type: array
                        inherit:
                          default: true
                          description: Whether a role "inherits" the privileges of
                            roles it is a member of. Defaults is `true`.
                          type: boolean
                        login:
                          description: Whether the role is allowed to log in. A role
                            having the `login` attribute can be thought of as a user.
                            Roles without this attribute are useful for managing database
                            privileges, but are not users in the usual sense of the
                            word. Default is `false`.
                          type: boolean
                        name:
                          description: Name of the role
                          type: string
                        passwordSecret:
                          description: Secret containing the password of the role
                            (if present) If null, the password will be ignored unless
                            DisablePassword is set
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                          required:
                          - name
                          type: object
                        replication:
                          description: Whether a role is a replication role. A role
                            must have this attribute (or be a superuser) in order
                            to be able to connect to the server in replication mode
                            (physical or logical replication) and in order to be able
                            to create or drop replication slots. A role having the
                            `replication` attribute is a very highly privileged role,
                            and should only be used on roles actually used for replication.
                            Default is `false`.
                          type: boolean
                        superuser:
                          description: Whether the role is a `superuser` who can override
                            all access restrictions within the database - superuser
                            status is dangerous and should be used only when really
                            needed. You must yourself be a superuser to create a new
                            superuser. Defaults is `false`.
                          type: boolean
                        validUntil:
                          description: Date and time after which the role's password
                            is no longer valid. When omitted, the password will never
                            expire (default).
                          format: date-time
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              serviceAccountTemplate:
                description: Configure the generation of the service account
                properties:
                  metadata:
                    description: Metadata are the metadata to be used for the generated
                      service account
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                required:
                - metadata
                type: object
            required:
            - cluster
            type: object
          status:
            description: 'Most recently observed status of the cluster. This data
              may not be up to date. Populated by the system. Read-only. More info:
              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              jobCount:
                description: How many Jobs have been created by this cluster
                format: int32
                type: integer
              managedRolesStatus:
                description: ManagedRolesStatus reports the state of the managed roles
                  in the cluster
                properties:
                  byStatus:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: ByStatus gives the list of roles in each state
                    type: object
                  cannotReconcile:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: CannotReconcile lists roles that cannot be reconciled
                      in PostgreSQL, with an explanation of the cause
                    type: object
                  passwordStatus:
                    additionalProperties:
                      description: PasswordState represents the state of the password
                        of a managed RoleConfiguration
                      properties:
                        resourceVersion:
                          description: the resource version of the password secret
                          type: string
                        transactionID:
                          description: the last transaction ID to affect the role
                            definition in PostgreSQL
                          format: int64
                          type: integer
                      type: object
                    description: PasswordStatus gives the last transaction id and
                      password secret version for each managed role
                    type: object
                type: object
              phase:
                description: Current phase of the cluster
                type: string
              phaseReason:
                description: Reason for the current phase
                type: string
              secretsResourceVersion:
                description: The list of resource versions of the secrets managed
                  by the operator. Every change here is done in the interest of the
                  instance manager, which will refresh the secret data
                properties:
                  applicationSecretVersion:
                    description: The resource version of the "app" user secret
                    type: string
                  managedRoleSecretVersion:
                    additionalProperties:
                      type: string
                    description: The resource versions of the managed roles secrets
                    type: object
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
